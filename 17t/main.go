package main

import "fmt"

func binarySearch(target int, list []int) bool {

	left := 0
	right := len(list) - 1

	//пока не перейдем последний оставшийся элемент, что будет значить, что поиск закончился
	for left <= right {
		//устанавливаем середину
		median := (left + right) / 2

		//сравниваем значение в середине с искомым числом
		//если меньше, значит число надо искать точно в правой половине относительно медины, поэтому перетаскиваем
		//левую границу массива, в котором ищем, т.е. сокращаем
		if list[median] < target {
			left = median + 1
		} else {
			//если искомое значение больше, ищем, соответственно, уже в левой половине
			right = median - 1
		}
	}

	//нет искомого значения - уперлись минимумом в правую границу (значение больше) ИЛИ значние меньше или его вообще нет
	if left == len(list) || list[left] != target {
		return false
	}

	return true
}

func main() {
	items := []int{1, 2, 9, 20, 31, 45, 63, 70, 100}
	fmt.Println(binarySearch(63, items))
}
